-- Create users table
CREATE TABLE IF NOT EXISTS `users` (
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) DEFAULT '',
    `email` VARCHAR(255) UNIQUE,
    `slug` VARCHAR(255) UNIQUE,
    `password` VARCHAR(255),
    `status` TINYINT(1) DEFAULT 1, 
    `followers_count` BIGINT DEFAULT 0,
    `followings_count` BIGINT DEFAULT 0,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL
);


-- Create profiles table
CREATE TABLE IF NOT EXISTS `profiles` (
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `img` TEXT DEFAULT NULL,
    `website` VARCHAR(255) DEFAULT NULL,
    `user_id` BIGINT,
    FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE
);


-- countries
CREATE TABLE IF NOT EXISTS `countries`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) DEFAULT '',
    `status` TINYINT(1) DEFAULT 1, 
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL
);


-- provinces
CREATE TABLE IF NOT EXISTS `provinces`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) DEFAULT '',
    `status` TINYINT(1) DEFAULT 1, 
    `country_id` BIGINT NOT NULL, 
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL,
    FOREIGN KEY (`country_id`) REFERENCES `countries`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);


-- cities
CREATE TABLE IF NOT EXISTS `cities`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) DEFAULT '',
    `status` TINYINT(1) DEFAULT 1, 
    `province_id` BIGINT NOT NULL, 
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL,
    FOREIGN KEY (`province_id`) REFERENCES `provinces`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);


-- user_addresses
CREATE TABLE IF NOT EXISTS `user_addresses` (
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `addresses` TEXT DEFAULT NULL,
    `postal_code` VARCHAR(255) NOT NULL,
    `city_id` BIGINT NOT NULL,
    `street` VARCHAR(255) NOT NULL,
    `plack` VARCHAR(255) NOT NULL, 
    `floor` VARCHAR(255) NOT NULL,
    `user_id` BIGINT NOT NULL,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL,
    FOREIGN KEY (`city_id`) REFERENCES `cities`(`id`) ON DELETE CASCADE,
    FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE
);


-- Sellers Table
CREATE TABLE IF NOT EXISTS `sellers`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `des` VARCHAR(255) NOT NULL,
    `img` TEXT NULL,
    `slug` VARCHAR(255) UNIQUE,
    `status` TINYINT(1) DEFAULT 1, 
    `user_id` BIGINT DEFAULT NULL,
    `likes_count` BIGINT DEFAULT 0,
    `dislikes_count` BIGINT DEFAULT 0,
    `products_count` BIGINT DEFAULT 0,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL,
    FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Create follows table
CREATE TABLE IF NOT EXISTS `follows` (
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `user_id` BIGINT NOT NULL,
    `follower_id` BIGINT NOT NULL,
    FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`follower_id`) REFERENCES `users`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL
);


-- Create tags table
CREATE TABLE IF NOT EXISTS `tags` (
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `slug` VARCHAR(255) UNIQUE,
    `status` TINYINT(1) DEFAULT 1, 
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL
);


-- Create posts table
CREATE TABLE IF NOT EXISTS `posts` (
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `slug` VARCHAR(255) UNIQUE,
    `status` TINYINT(1) DEFAULT 1, 
    `img` TEXT DEFAULT NULL,
    `des` TEXT DEFAULT NULL,
    `likes_count` BIGINT DEFAULT 0,
    `dislikes_count` BIGINT DEFAULT 0,
    `comments_count` BIGINT DEFAULT 0,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL
);


-- Create likes table for storing likes and dislikes across the application
CREATE TABLE IF NOT EXISTS `likes` (
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `value` INT NOT NULL,
    `likeable_type` VARCHAR(255) NOT NULL,
    `likeable_id` BIGINT NOT NULL,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL
);


-- Pivot table for tags and posts (many-to-many relationship)
CREATE TABLE IF NOT EXISTS `tag_posts` (
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `tag_id` BIGINT NOT NULL,
    `post_id` BIGINT NOT NULL,
    FOREIGN KEY (`tag_id`) REFERENCES `tags`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`post_id`) REFERENCES `posts`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Comment table to store comments on various entities (posts, products, etc.)
CREATE TABLE IF NOT EXISTS `comments` (
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `text` TEXT NOT NULL,
    `status` TINYINT(1) DEFAULT 0, 
    `user_id` BIGINT NOT NULL,
    `parent_id` BIGINT DEFAULT 0,
    `commentable_id` BIGINT NOT NULL,
    `commentable_type` VARCHAR(255) NOT NULL,
    FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL
);


-- Categories Table
CREATE TABLE IF NOT EXISTS `categories`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `slug` VARCHAR(255) UNIQUE,
    `status` TINYINT(1) DEFAULT 1, 
    `parent_id` BIGINT DEFAULT NULL,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL
);


-- Category Options
CREATE TABLE IF NOT EXISTS `category_options`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `key` VARCHAR(255) NOT NULL,
    `type` ENUM('int','str','arr') NOT NULL,
    `arr` TEXT NULL,
    `category_id` BIGINT NOT NULL,
    FOREIGN KEY (`category_id`) REFERENCES `categories`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL
);


-- Brands Table
CREATE TABLE IF NOT EXISTS `brands`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `slug` VARCHAR(255) UNIQUE,
    `status` TINYINT(1) DEFAULT 1, 
    `category_id` BIGINT DEFAULT NULL,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL,
    FOREIGN KEY (`category_id`) REFERENCES `categories`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);


-- insurances 
CREATE TABLE IF NOT EXISTS `insurances`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `price` INT NOT NULL,
    `slug` VARCHAR(255) UNIQUE,
    `status` TINYINT(1) DEFAULT 1, 
    `count` BIGINT DEFAULT 0,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL
);


-- Products Table
CREATE TABLE IF NOT EXISTS `products`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `price` INT NOT NULL,
    `maximum_discount` INT NOT NULL,
    `category_id` BIGINT NOT NULL,
    `brand_id` BIGINT NOT NULL,
    `seller_id` BIGINT NOT NULL,
    `slug` VARCHAR(255) UNIQUE,
    `status` TINYINT(1) DEFAULT 1, 
    `img` TEXT DEFAULT NULL,
    `des` TEXT DEFAULT NULL,
    `count` BIGINT DEFAULT 0,
    `likes_count` BIGINT DEFAULT 0,
    `comments_count` BIGINT DEFAULT 0,
    `dislikes_count` BIGINT DEFAULT 0,
    `sells_count` BIGINT DEFAULT 0,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL,
    FOREIGN KEY (`category_id`) REFERENCES `categories`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`brand_id`) REFERENCES `brands`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`seller_id`) REFERENCES `sellers`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);


-- product_colors
CREATE TABLE IF NOT EXISTS `product_colors`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `color_code` VARCHAR(255) NOT NULL,
    `price` INT NOT NULL,
    `product_id` BIGINT NOT NULL,
    `slug` VARCHAR(255) UNIQUE,
    `status` TINYINT(1) DEFAULT 1, 
    `count` BIGINT DEFAULT 0,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL,
    FOREIGN KEY (`product_id`) REFERENCES `products`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);


-- option_products pivotTable between category_options and products
CREATE TABLE IF NOT EXISTS `category_option_products`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `option_id` BIGINT NOT NULL,
    `product_id` BIGINT NOT NULL,
    FOREIGN KEY (`option_id`) REFERENCES `category_options`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`product_id`) REFERENCES `products`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);


-- discounts
CREATE TABLE IF NOT EXISTS `discounts`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `start_date` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `end_date` DATETIME,
    `type` TINYINT DEFAULT 0 COMMENT 'if 0 ? percentage : price',
    `value` INT NOT NULL,
    `maximum` INT NOT NULL,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL
);


-- private_discounts
CREATE TABLE IF NOT EXISTS `private_discounts`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `user_id` BIGINT NOT NULL,
    `start_date` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `end_date` DATETIME,
    `type` TINYINT DEFAULT 0 COMMENT 'if 0 ? percentage : price',
    `value` INT NOT NULL,
    `maximum` INT NOT NULL,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL,
    FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON UPDATE CASCADE ON DELETE CASCADE
);


-- amazing_sells
CREATE TABLE IF NOT EXISTS `amazing_sells`(
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `name` VARCHAR(255) NOT NULL,
    `product_id` BIGINT NOT NULL,
    `start_date` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `end_date` DATETIME,
    `value` INT NOT NULL,
    `maximum` INT NOT NULL,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL,
    FOREIGN KEY (`product_id`) REFERENCES `products`(`id`) ON UPDATE CASCADE ON DELETE CASCADE
);


-- Create carts table
CREATE TABLE IF NOT EXISTS `carts` (
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `user_id` BIGINT NOT NULL,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL,
    FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Create orders table
CREATE TABLE IF NOT EXISTS `orders` (
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `user_id` BIGINT NOT NULL,
    `total_amount` DECIMAL(10, 2) NOT NULL,
    `status` ENUM('pending', 'completed', 'canceled') DEFAULT 'pending',
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL,
    FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Create order_items table
CREATE TABLE IF NOT EXISTS `order_items` (
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `order_id` BIGINT NOT NULL,
    `product_id` BIGINT NOT NULL,
    `quantity` INT NOT NULL,
    `price` DECIMAL(10, 2) NOT NULL,
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL,
    FOREIGN KEY (`order_id`) REFERENCES `orders`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`product_id`) REFERENCES `products`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Create payments table
CREATE TABLE IF NOT EXISTS `payments` (
    `id` BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
    `order_id` BIGINT NOT NULL,
    `amount` DECIMAL(10, 2) NOT NULL,
    `payment_method` ENUM('credit_card', 'paypal', 'bank_transfer') NOT NULL,
    `status` ENUM('pending', 'completed', 'failed') DEFAULT 'pending',
    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME DEFAULT NULL,
    FOREIGN KEY (`order_id`) REFERENCES `orders`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Alter tables
ALTER TABLE `users`
ADD COLUMN `last_login` DATETIME DEFAULT NULL;

ALTER TABLE `profiles`
ADD COLUMN `bio` TEXT DEFAULT NULL;